options:
  logging: CLOUD_LOGGING_ONLY  # Specify how logging should be handled
  # logsBucket: gs://mnkcloud
    # Specifyv how logging should be handled

steps:
  # Fetch the latest version of the secret and store it securely in Cloud Build environment
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud secrets versions access latest --secret=my-secret --project=mounika8036-426015 > /tmp/service-account-key.json
        
        ls -l /tmp  # List files in /tmp directory to verify service-account-key.json existence
        cat /tmp/service-account-key.json  # Output the contents for verification (optional)

        # Activate service account using the key file
        gcloud auth activate-service-account --key-file=/tmp/service-account-key.json

  # Build and push Docker images for frontend and backend applications
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/mounika8036-426015/frontend-ui:$SHORT_SHA', './frontend']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/mounika8036-426015/backend-app:$SHORT_SHA', './backend']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/frontend-ui:$SHORT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/backend-app:$SHORT_SHA']

  # Apply Kubernetes deployment files
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', './frontend/deployment.yaml']
    env: ['CLOUDSDK_COMPUTE_ZONE=us-central1-a', 'CLOUDSDK_CONTAINER_CLUSTER=mycluster']

  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', './backend/deployment.yaml']
    env: ['CLOUDSDK_COMPUTE_ZONE=us-central1-a', 'CLOUDSDK_CONTAINER_CLUSTER=mycluster']

  # Apply Kubernetes service files
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', './frontend/frontend-service.yaml']
    env: ['CLOUDSDK_COMPUTE_ZONE=us-central1-a', 'CLOUDSDK_CONTAINER_CLUSTER=mycluster']

  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', './backend/backend-service.yaml']
    env: ['CLOUDSDK_COMPUTE_ZONE=us-central1-a', 'CLOUDSDK_CONTAINER_CLUSTER=mycluster']
